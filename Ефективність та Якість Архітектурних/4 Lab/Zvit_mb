# Лабораторна робота № 4

## Тема: Відмова від спадку. Альтернативні класи з різними інтерфейсами

### Мета
Рефакторинг коду, коли підклас використовує лише малу частину успадкованих методів і властивостей суперкласу.

### Завдання 1

#### Опис проблеми
У початковому коді клас `Dog` успадковує від класу `Animal`, але не використовує методи базового класу напряму, що призводить до надлишкової складності.

#### Рішення
Ми застосували делегування, щоб підклас `Dog` викликав методи базового класу `Animal` через делегування, створивши екземпляр класу `Animal` всередині класу `Dog`.

### Завдання 2

#### Опис проблеми
Класи `Square` і `Circle` виконують однакову функцію обчислення площі фігури, але мають різний інтерфейс, що ускладнює їх використання в одному контексті.

#### Рішення
Ми створили спільний інтерфейс `Shape` з абстрактним методом `area` і реалізували цей метод у класах `Square` і `Circle`. Це дозволяє використовувати класи з однаковим інтерфейсом для обчислення площі.

### Висновок
Рефакторинг дозволив зробити код більш зрозумілим, гнучким і легким для розширення. Замість спадкування ми використовували делегування в першому завданні та спільний інтерфейс у другому, що покращило структуру коду.
